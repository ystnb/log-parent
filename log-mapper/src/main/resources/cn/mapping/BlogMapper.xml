<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yt.cn.log.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="yt.cn.log.pojo.Blog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
    <result column="attribute" property="attribute" jdbcType="VARCHAR" />
    <result column="disabled" property="disabled" jdbcType="INTEGER" />
    <result column="frequency" property="frequency" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="LimitDesc" type="yt.cn.log.pojo.Blog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
     <result column="frequency" property="frequency" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="yt.cn.log.pojo.Blog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, create_time, author, edit_time, attribute, disabled,frequency,content
  </sql>
  <sql id="Base_List" >
    id, title, create_time, author, edit_time, attribute, disabled,content,frequency
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="yt.cn.log.pojo.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="yt.cn.log.pojo.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from blog
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="yt.cn.log.pojo.BlogExample" >
    delete from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="yt.cn.log.pojo.Blog" >
    insert into blog (id, title, create_time, 
      author, edit_time, attribute, 
      disabled,frequency, content)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{author,jdbcType=VARCHAR}, #{editTime,jdbcType=TIMESTAMP}, #{attribute,jdbcType=VARCHAR}, 
      #{disabled,jdbcType=INTEGER},#{frequency,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="yt.cn.log.pojo.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="attribute != null" >
        attribute,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attribute != null" >
        #{attribute,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=INTEGER},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="yt.cn.log.pojo.BlogExample" resultType="java.lang.Integer" >
    select count(*) from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.editTime != null" >
        edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attribute != null" >
        attribute = #{record.attribute,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null" >
        disabled = #{record.disabled,jdbcType=INTEGER},
      </if>
      <if test="record.frequency != null" >
        frequency = #{record.frequency,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blog
    set id = #{record.id,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      author = #{record.author,jdbcType=VARCHAR},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      attribute = #{record.attribute,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=INTEGER},
      frequency = #{record.frequency,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog
    set id = #{record.id,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      author = #{record.author,jdbcType=VARCHAR},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      attribute = #{record.attribute,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      frequency = #{record.disabled,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="yt.cn.log.pojo.Blog" >
    update blog
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attribute != null" >
        attribute = #{attribute,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=INTEGER},
      </if>
      <if test="frequency != null" >
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="yt.cn.log.pojo.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      attribute = #{attribute,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=INTEGER},
      frequency = #{frequency,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="yt.cn.log.pojo.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      attribute = #{attribute,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      frequency = #{frequency,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="queryGetByNames" parameterType="map" resultMap="BaseResultMap">
   select
  <include refid="Base_List" />
    from blog
   where disabled=0
    <if test="title != null" >
      and  title = #{title,jdbcType=VARCHAR},
     </if>
    <if test="author != null" >
      and  author = #{author,jdbcType=VARCHAR},
     </if>
    <if test="attribute != null" >
      and  attribute = #{attribute,jdbcType=VARCHAR},
     </if>
    <if test="createTime != null" >
      and  create_time = #{createTime,jdbcType=TIMESTAMP},
     </if>
    <if test="editTime != null" >
      and  edit_time = #{editTime,jdbcType=TIMESTAMP},
     </if> order by frequency desc LIMIT 0, 10
  </select>
  <!-- 查询最新的5条 -->
  <select id="getCreateTimeDesc"  resultMap="LimitDesc">
   select id,title,frequency from blog where disabled=0 ORDER BY create_time DESC  LIMIT 0, 5
  </select>
  <!-- 查询点击最多的5条 -->
  <select id="getFrequencyDesc"  resultMap="LimitDesc">
  	 select id,title,frequency from blog where disabled=0 ORDER BY frequency DESC  LIMIT 0, 5
  </select>
  
    <insert id="insertBlog">
		insert into blog (id, title, create_time, 
      author, edit_time, attribute, 
      disabled,frequency, content)
		values
		(#{blog.id,jdbcType=VARCHAR}, #{blog.title,jdbcType=VARCHAR}, #{blog.createTime,jdbcType=TIMESTAMP}, 
      #{blog.author,jdbcType=VARCHAR}, #{blog.editTime,jdbcType=TIMESTAMP}, #{blog.attribute,jdbcType=VARCHAR}, 
      0,0, #{blog.content,jdbcType=LONGVARCHAR}
		)
	</insert>
  <select id="getLikeContent" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from blog
    where content like concat(concat('%',#{content}),'%') and disabled=0 ORDER BY create_time DESC  LIMIT 0, 100
  </select>
</mapper>